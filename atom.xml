<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liquid&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-02T07:41:11.968Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Liquid</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>模电</title>
    <link href="http://example.com/2021/04/27/%E6%A8%A1%E7%94%B5%E7%9A%84%E4%B8%80%E4%BA%9BTips/"/>
    <id>http://example.com/2021/04/27/%E6%A8%A1%E7%94%B5%E7%9A%84%E4%B8%80%E4%BA%9BTips/</id>
    <published>2021-04-27T10:57:34.000Z</published>
    <updated>2021-05-02T07:41:11.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-电路的基本概念与基本定律">第一章 电路的基本概念与基本定律</h2><h3 id="电路组成与功能">1.1 电路组成与功能</h3><ol type="1"><li>电路</li><li>负载</li><li>中间环节</li></ol><h3 id="电路中的基本物理量电压电流电位功率">1.2 电路中的基本物理量：电压、电流、电位、功率</h3><h4 id="电流">1.2.1 电流</h4><p>只有选定的参考方向之后，电流才有正负之分。</p><figure><img src="https://pic1.zhimg.com/80/v2-1dd6290f21ef41a6fd7f3e6ebac40c81_720w.jpg?source=1940ef5c" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="电压电位和电动势">1.2.2 电压、电位和电动势</h4><p>电动势是对电源中非电动势做功能力的表述，方向从电源负极指向正极。</p><h4 id="功率和能量">1.2.3 功率和能量</h4><h3 id="电路模型">1.3 电路模型</h3><h3 id="基本电路元件模型">1.4 基本电路元件模型</h3><h4 id="单端口理想元件">1.4.1 单端口理想元件</h4><ol type="1"><li>电阻原件</li><li>电容元件（记忆元件、动态元件、储能元件</li><li>电感元件（记忆元件、动态元件、储能元件</li><li>有源电路元件：理想电流/电压源</li></ol><h4 id="双端口理想元件">1.4.2 双端口理想元件</h4><ol type="1"><li>理想变压器</li><li>线性受控电源模型</li></ol><h3 id="电路的工作状态与电气设备的额定值">1.5 电路的工作状态与电气设备的额定值</h3><h4 id="电路的工作状态">1.5.1 电路的工作状态</h4><ol type="1"><li>开路</li><li>短路</li><li>负载</li></ol><h4 id="电气设备的额定值">1.5.2 电气设备的额定值</h4><h3 id="基尔霍夫定律">1.6 基尔霍夫定律</h3><p>支路、结点、回路、网孔</p><h4 id="基尔霍夫电流定律">1.6.1 基尔霍夫电流定律</h4><p>流入电流等于流出电流</p><h4 id="基尔霍夫电压定律">1.6.2 基尔霍夫电压定律</h4><p>回路一圈的电压降平衡</p><h2 id="第二章-电路分析的基本方法">第二章 电路分析的基本方法</h2><h3 id="等效电路法">2.1 等效电路法</h3><p>对外不对内</p><p>对外表现为端口电压、电流均与原来相同</p><h4 id="等效电路的概念">2.1.1 等效电路的概念</h4><h4 id="电阻的串联并联等效">2.1.2 电阻的串联并联等效</h4><h4 id="理想电压源电流源的串联和并联">2.1.3 理想电压源、电流源的串联和并联</h4><p>关键在于<strong>理想器件</strong></p><ol type="1"><li>理想电压源的串联等效</li><li>理想电压源与非电压源支路的并联等效：<strong>忽略非电压源支路</strong></li><li>理想电流源的并联等效</li><li>理想电流源与非电流源支路的串联等效：<strong>忽略非电流源支路</strong></li></ol><h4 id="电源模型的等效">2.1.4 电源模型的等效</h4><p>电压源模型和电流源模型可以互相转换，但必须都是<strong>非理想型</strong>的。</p><p>等效条件：</p><ol type="1"><li>内阻相同</li><li>U=I/R</li></ol><h3 id="电路分析的系统方法">2.2 电路分析的系统方法</h3><h4 id="全电路方程">2.2.1 全电路方程</h4><h4 id="支路电流分析法">2.2.2 支路电流分析法</h4><ol type="1"><li>选定各支路电流的参考方向以及回路的绕行方向</li><li>列写独立的KCL方程</li><li>列些独立回路的KVL方程</li><li>联立上述方程，得到各支路电流</li><li>确定各支路电压</li></ol><h4 id="网孔电流分析法">2.2.3 网孔电流分析法</h4><ol type="1"><li>设定网孔电流，并统一方向</li><li>列写网孔方程组<ul><li>自电阻正常计算</li><li>互电阻多个电流均要计算，注意符号</li></ul></li><li>求解得到网孔电流</li><li>求各支路电流</li></ol><h4 id="结点电压分析法">2.2.4 结点电压分析法</h4><p>本质上还是<strong>基尔霍夫电流定律</strong></p><ol type="1"><li>确定一个结点</li><li>找到于其直接相连（即中间没有其他节点，但可以隔着一些元件）的电阻和电源</li><li>找到的每一个电阻都会连接着两个不同节点，取他们的电位差，已经确认的结点在前，用电位差除以该电阻</li><li>累加得到的电流值放方程左边，右边是电源的电流值（注意方向）</li></ol><p><strong>弥尔曼定理</strong></p><p>　　通常把用来解由电压源和电阻组成的两个节点电路的节点电压法叫做弥尔曼定理.</p><p>　　它是节点电压法的一种特殊情况.也就是在只有一个独立节点时,该节点电压的表达式的通用形式</p><h3 id="电路定理">2.3 电路定理</h3><h4 id="叠加定理">2.3.1 叠加定理</h4><ol type="1"><li>选定单个电流/电压源，其余电压源短路，电流源断路</li><li>将各个情况中，题目所要求的位置的参树相加（注意方向</li></ol><h4 id="替代定理">2.3.2 替代定理</h4><p>知端口的电压or电流，即用对应的等效的电源替代之</p><h4 id="等效电源定理">2.3.3 等效电源定理</h4><p>分析电路时<strong>将代求支路从电路中分离</strong>出来，其余部分的电路（二端网络）可视为待分析电路的<strong>等效电源</strong></p><p><strong>戴维宁定理</strong>（等效电压源</p><ol type="1"><li>将代求电路<strong>开路</strong>，求其位置上的端口电压</li><li>从该位置向里看，电压源短路电流源断路，求出等效电阻</li></ol><p><strong>诺顿定理</strong>（等效电流源</p><ol type="1"><li>将代求电路<strong>短路</strong>，求其支路上的短路电流</li><li>从该位置向里看，电压源短路电流源断路，求出等效电阻</li></ol><h4 id="最大功率传输定理">2.3.4 最大功率传输定理</h4><p>当且仅当负载电阻等于等效电源内阻时，等效电源向负载的传输功率最大</p><h3 id="含受控电路的电路分析">2.4 含受控电路的电路分析</h3><h2 id="第三章-交流稳态电路分析">第三章 交流稳态电路分析</h2><h3 id="正弦量的基本概念">3.1 正弦量的基本概念</h3><p>周期、振幅、初相位</p><h3 id="正弦量的相量表示法及向量图">3.2 正弦量的相量表示法及向量图</h3><p>​ <span class="math inline">\(i(t)=I_msin(\omega t+\theta)=\mathbf{Im}\left\{ I_me^{j(\omega t+\theta)} \right\}\)</span></p><p>$  {}$ 表示取虚部，这里用到了欧拉公式 $ e^{j}=cos+jsin$</p><p>定义复常数 $ _m=I_me^{j}=I_m$ , <strong>它是旋转矢量<code>t=0</code>时的复数表达</strong> ，即标示着<strong>初相位</strong>和振幅参数</p><p>​ $ i(t)=I_msin(t+)= {_me^{jt}}$</p><p><strong>当频率一定时，相量唯一的表示了正弦量</strong></p><p>在具体计算时 <span class="math inline">\(I_m\angle\theta = I_m(cos\theta+jsin\theta)\)</span> 然后进行复数的加减乘除运算</p><h3 id="单一频率正弦稳态电路分析">3.3 单一频率正弦稳态电路分析</h3><p>电感时电压领先电流九十度</p><p>电阻是电流领先电压九十度</p><h3 id="正弦稳态电路的功率及功率因素的提高">3.4 正弦稳态电路的功率及功率因素的提高</h3><p>有功功率、无功功率、视在功率</p><h3 id="正弦稳态电路中的谐振">3.5 正弦稳态电路中的谐振</h3><p>如果在某一频率时<strong>端口电压与电流同相位</strong>，二端网络呈现纯电阻特性。阻抗达到最大值或最小值，而端口电压或电流出现最大值或最小值，这种现象称为<strong>谐振</strong>。</p><h3 id="三相交流电路">3.6 三相交流电路</h3><h3 id="非正弦周期交流稳态电路">3.7 非正弦周期交流稳态电路</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一章-电路的基本概念与基本定律&quot;&gt;第一章 电路的基本概念与基本定律&lt;/h2&gt;
&lt;h3 id=&quot;电路组成与功能&quot;&gt;1.1 电路组成与功能&lt;/h3&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;电路&lt;/li&gt;
&lt;li&gt;负载&lt;/li&gt;
&lt;li&gt;中间环节&lt;/li&gt;
</summary>
      
    
    
    
    <category term="电路" scheme="http://example.com/categories/%E7%94%B5%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF Crypto WP</title>
    <link href="http://example.com/2021/04/26/BUUCTF-Crypto-WP/"/>
    <id>http://example.com/2021/04/26/BUUCTF-Crypto-WP/</id>
    <published>2021-04-26T14:50:02.000Z</published>
    <updated>2021-04-29T09:15:03.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>题目：e00cf25ad42683b3df678c61f42c6bda</p><p><strong>flag{admin1}</strong></p><p>MD5是输入不定长度信息，输出固定长度128-bits的算法。经过程序流程，生成四个32位数据，最后联合起来成为一个128-bits<a href="https://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97">散列</a>。基本方式为，求余、取余、调整长度、与链接变量进行循环运算。得出结果。</p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/29bfebad4e7bdd4a2fc1210694eb5664262faecc" alt="F(X,Y,Z) = (X\wedge{Y}) \vee (\neg{X} \wedge{Z})"></p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/7068038702afd55190f991518f3a9188565f32d0" alt="G(X,Y,Z) = (X\wedge{Z}) \vee (Y \wedge \neg{Z})"></p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c121ed0510b6ad3ffde9b89cec96ff7552ae9236" alt="H(X,Y,Z) = X \oplus Y \oplus Z"></p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/2f119366de7d323f5e02b8d12a741968fa9d0f99" alt="I(X,Y,Z) = Y \oplus (X \vee \neg{Z})"></p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ed39414f7a4720bbf82749a9fcd3ebb15220ea72" alt="\oplus, \wedge, \vee, \neg"> 是 <em>XOR</em>, <em>AND</em>, <em>OR</em> , <em>NOT</em> 的符号。</p><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>题目：姓名：张三 生日：19900315</p><p><strong>flag{zs19900315}</strong></p><p>可能是大多数人的密码都是姓名缩写加生日</p><h2 id="Unencode"><a href="#Unencode" class="headerlink" title="Unencode"></a>Unencode</h2><p>题目：</p><p><strong>flag{dsdasdsa99877LLLKK}</strong></p><p><em>Uuencode</em>将输入文本以每三个字节为单位进行编码，如果最后剩下的资料少于三个字节，不够的部份用零补齐。三个字节共有24个Bit，以6-bit为单位分为4个组，每个组以十进制来表示所出现的字节的数值。这个数值只会落在0到63之间。然后将每个数加上32，所产生的结果刚好落在ASCII字符集中可打印字符（32-空白…95-底线）的范围之中。</p><p><a href="http://blog.chacuo.net/753.html">uuencode编码算法</a></p><h2 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h2><p>题目：%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d</p><p><strong>flag{and 1=1}</strong></p><p>这种编码是在特殊字符hex的基础上，在每个字符前置一个%。所以在编码和解码的过程中，<strong>只需要关注%，连带着%的三个字符对应着明文中的一个字符</strong>。</p><h2 id="摩斯"><a href="#摩斯" class="headerlink" title="摩斯"></a>摩斯</h2><p>题目：… .-… — …- . -.– — …-</p><p><strong>flag{ILOVEYOU}</strong></p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/%E5%9B%BD%E9%99%85%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81.svg/315px-%E5%9B%BD%E9%99%85%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81.svg.png" alt="img"></p><h2 id="一眼就解密"><a href="#一眼就解密" class="headerlink" title="一眼就解密"></a>一眼就解密</h2><p>题目：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=</p><p><strong>flag{THE_FLAG_OF_THIS_STRING}</strong></p><p>base64编码</p><p><strong>base三种编码的分辨方法</strong></p><p>首先看有没有符号，base64和base32都以’=‘作为空白补足符符号，如果结尾没有’=’有可能是base16。如果出现了+和/，那么一定是base64。</p><p>然后看大小写字母，如果有大写有小写就一定是base64。如果全是大写的情况就看具体字母有没有F之后的字母出现，因为base16就是16进制，字母部分只到F。</p><p>当然这个base32的数字部分只有2-7，不过数字一般不好判断，所以这里不推荐用数字进行判断。</p><p>最后基本上就可以判断出来了，实在不行就拿去在线网站挨个方式解码，也不麻烦。</p><h2 id="看我回旋踢"><a href="#看我回旋踢" class="headerlink" title="看我回旋踢"></a>看我回旋踢</h2><p>题目：synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}</p><p><strong>flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}</strong></p><p>凯撒密码，密文中的synt是很典型的偏移量为13的凯撒密码</p><h2 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h2><p>题目：加密密文：afZ_r9VYfScOeO_UL^RWUc 格式：flag{ }</p><p><strong>flag{Caesar_variation}</strong></p><p>先用普通凯撒做，结果为空</p><p>因为知道格式为<code>flag&#123;</code> 观察前四位，对应的偏移量为5、6、7、8、9，猜测每移动一位偏移量就加一</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;afZ_r9VYfScOeO_UL^RWUc&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">offset = <span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">flag += <span class="built_in">str</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) + offset))</span><br><span class="line">offset += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span> (flag)</span><br></pre></td></tr></table></figure><h2 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h2><p>题目：=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6</p><p><strong>flag{那你也很棒哦}</strong></p><p>hex编码</p><h2 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h2><p>题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</p><p><strong>flag{Cute_Rabbit}</strong></p><p>Rabbit 是一种高速流密码，于2003 年在FSE 研讨会上首次提出。 Rabbit 使用一个128 位密钥和一个64 位初始化向量。 该加密算法的核心组件是一个位流生成器，该流生成器每次迭代都会加密128 个消息位。 Rabbit 也是一种对称加密算法。</p><h2 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h2><p>题目：felhaagv{ewtehtehfilnakgw}</p><p><strong>flag{wethinkwehavetheflag}</strong></p><p>栅栏密码</p><p>观察可以发现<code>felhaagv&#123;ewtehtehfilnakgw&#125;</code>，<code>f</code>和<code>l</code>的下标差为2，总字符数为26，所以密钥即栅栏的长度为13</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MD5&quot;&gt;&lt;a href=&quot;#MD5&quot; class=&quot;headerlink&quot; title=&quot;MD5&quot;&gt;&lt;/a&gt;MD5&lt;/h2&gt;&lt;p&gt;题目：e00cf25ad42683b3df678c61f42c6bda&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;flag{admin1}&lt;/s</summary>
      
    
    
    
    <category term="WP" scheme="http://example.com/categories/WP/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="Crypto" scheme="http://example.com/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF特训营</title>
    <link href="http://example.com/2021/04/24/CTF%E7%89%B9%E8%AE%AD%E8%90%A5/"/>
    <id>http://example.com/2021/04/24/CTF%E7%89%B9%E8%AE%AD%E8%90%A5/</id>
    <published>2021-04-23T16:45:39.000Z</published>
    <updated>2021-04-29T09:20:31.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第18章-Crypto概述"><a href="#第18章-Crypto概述" class="headerlink" title="第18章 Crypto概述"></a>第18章 Crypto概述</h2><p><strong>Crypto选手应有的能力</strong>：</p><ol><li>识别能力：识别出密码算法和编码算法</li><li>攻击能力：结合环境联想到特定算法的攻击方法</li><li>分析能力：对未知算法人工分析</li><li>编程能力：编程实现破解算法的程序，并认识到复杂度</li><li>学习能力：快速理解最新文献中的密码攻击并实现</li><li>跨领域能力：Crypto经常多领域结合出现，如Reverse、PWN、Web</li></ol><p><strong>密码学攻击</strong>：</p><ol><li><p>唯密文攻击</p></li><li><p>已知明文攻击</p></li><li><p>选择明文攻击</p></li><li><p>选择密文攻击</p></li></ol><h2 id="第19章-编码"><a href="#第19章-编码" class="headerlink" title="第19章 编码"></a>第19章 编码</h2><p>编码（encode）是信息的另一种表达方式，可以解决一些传输问题。<br>将编码信息转化为原始信息，称之为解码（decode）。</p><h3 id="19-1-hex"><a href="#19-1-hex" class="headerlink" title="19.1 hex"></a>19.1 hex</h3><p>hex编码就是根据每个字符的ASCII码进行<strong>16进制</strong>的转换。<br><strong>一个字符经过编码变成了两个字符</strong>。<br>还可以作为将字符串转为十进制运算时的中转。</p><h3 id="19-2-urlencode"><a href="#19-2-urlencode" class="headerlink" title="19.2 urlencode"></a>19.2 urlencode</h3><p>这种编码用于浏览器和网站之间的数据交换。可以解决一些特殊字符在传输过程中造成的问题。<br>这种编码是在特殊字符hex的基础上，在每个字符前置一个%。所以在编码和解码的过程中，<strong>只需要关注%，连带着%的三个字符对应着明文中的一个字符</strong>。</p><h3 id="19-3-morsecode"><a href="#19-3-morsecode" class="headerlink" title="19.3 morsecode"></a>19.3 morsecode</h3><p>“.” 表示短音，“—” 表示长音，“/” 或”空格“表示分隔符。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/%E5%9B%BD%E9%99%85%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81.svg/315px-%E5%9B%BD%E9%99%85%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81.svg.png" alt="img"></p><h3 id="19-4-jsfuck"><a href="#19-4-jsfuck" class="headerlink" title="19.4 jsfuck"></a>19.4 jsfuck</h3><p>仅用六个字符  <strong>()+[]!</strong> 就可以书写任意的JavaScript代码。</p><h3 id="19-5-uuencode"><a href="#19-5-uuencode" class="headerlink" title="19.5 uuencode"></a>19.5 uuencode</h3><p>可以将二进制文件转换为可见字符文本的一种编码。<br>特征是<strong>范围从32到95，没有小写字母</strong>。</p><blockquote><p><strong>UUencode</strong>是一种二进制到文字的编码！</p><p>它不是MIME编码中一员。最早在unix 邮件系统中使用，全称：Unix-to-Unix encoding。它也是定义了用可打印字符表示二进制文字一种方法，并不是一种新的编码集合。</p><p>Uuencode将输入文本以每三个字节为单位进行编码，如果最后剩下的资料少于三个字节，不够的部份用零补齐。三个字节共有24个Bit，以6-bit为单位分为4个组，每个组以十进制来表示所出现的字节的数值。这个数值只会落在0到63之间。然后将每个数加上32，所产生的结果刚好落在ASCII字符集中可打印字符（32-空白…95-底线）的范围之中。</p><p>跟Base64具有非常多的类似，也做了一些特殊转码说明！因为对所有文本都会编码一次可读性不是很好！！</p></blockquote><p><a href="http://blog.chacuo.net/753.html">uuencode编码算法</a></p><h3 id="19-6-base家族"><a href="#19-6-base家族" class="headerlink" title="19.6 base家族"></a>19.6 base家族</h3><p>主要功能是将特殊字符和不可见字符转换为常见字符。<br>hex编码其实就是base16编码。因为hex是用字符ASCII码的十六进制表示，即用16个字符表示256个字符，所以叫base16。<br>同理，base32和base64就是用32、64个字符表示256个字符。</p><p>base64：<br><img src="https://img-blog.csdnimg.cn/20200602074159877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hc3Rlcmd1Mg==,size_16,color_FFFFFF,t_70" alt="base64索引表"><br>base32：<br><img src="https://img-blog.csdnimg.cn/20200602074337747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hc3Rlcmd1Mg==,size_16,color_FFFFFF,t_70" alt="base32索引表"><br>base16：<br><img src="https://img-blog.csdnimg.cn/20200602074410371.png" alt="base16索引表"></p><h2 id="第二十章-古典密码"><a href="#第二十章-古典密码" class="headerlink" title="第二十章 古典密码"></a>第二十章 古典密码</h2><p><strong>移位密码</strong>和<strong>替代密码</strong></p><h3 id="20-1-移位密码"><a href="#20-1-移位密码" class="headerlink" title="20.1 移位密码"></a>20.1 移位密码</h3><h4 id="20-1-1-简单移位密码"><a href="#20-1-1-简单移位密码" class="headerlink" title="20.1.1 简单移位密码"></a>20.1.1 简单移位密码</h4><h4 id="20-1-4-栅栏密码"><a href="#20-1-4-栅栏密码" class="headerlink" title="20.1.4 栅栏密码"></a>20.1.4 栅栏密码</h4><p>密钥为栅栏的长度k，顺数k个字符为一组，取每一组的第一个字符组成字符串，取完一轮后再取每组的第二个，以此类推。</p><p>观察的方法是，如果flag是特征，那么密文中<code>f</code>和<code>l</code>的下标差为m，总字符数为n，所以密钥即栅栏的长度为<strong>n/m</strong></p><h3 id="20-2-替换密码"><a href="#20-2-替换密码" class="headerlink" title="20.2 替换密码"></a>20.2 替换密码</h3><p>最有效的攻击方法是<strong>词频攻击</strong></p><h4 id="20-2-1-单表替代密码"><a href="#20-2-1-单表替代密码" class="headerlink" title="20.2.1 单表替代密码"></a>20.2.1 单表替代密码</h4><h5 id="1-凯撒密码"><a href="#1-凯撒密码" class="headerlink" title="1.凯撒密码"></a>1.凯撒密码</h5><p>将所有数字偏移一定的位数，生成密文</p><p>最简单的攻击方法是<strong>直接爆破</strong>，将所有移位方式全部生成然后关键词匹配或者肉眼观察</p><h5 id="2-ROT13"><a href="#2-ROT13" class="headerlink" title="2.ROT13"></a>2.ROT13</h5><p>是凯撒密码的一种特例，即移位13.</p><p>经常用于MD5和flag等字符串上，MD5由于只有“ABCDEF”六个字符，加密后变为“<strong>NOPQRS</strong>”，flag则变成“<strong>synt</strong>”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第18章-Crypto概述&quot;&gt;&lt;a href=&quot;#第18章-Crypto概述&quot; class=&quot;headerlink&quot; title=&quot;第18章 Crypto概述&quot;&gt;&lt;/a&gt;第18章 Crypto概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Crypto选手应有的能力&lt;/str</summary>
      
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/04/21/hello-world/"/>
    <id>http://example.com/2021/04/21/hello-world/</id>
    <published>2021-04-20T17:24:31.184Z</published>
    <updated>2021-04-20T17:24:31.185Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
